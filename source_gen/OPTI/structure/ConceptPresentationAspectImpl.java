package OPTI.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Input_field;
  private ConceptPresentation props_MAIN;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Input_field:
        if (props_Input_field == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("\"Champ de donn√©e\"");
          cpb.presentationByName();
          props_Input_field = cpb.create();
        }
        return props_Input_field;
      case LanguageConceptSwitch.MAIN:
        if (props_MAIN == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("\"Base_concept\"");
          cpb.presentationByName();
          cpb.icon(IconContainer.RESOURCE_a0a3a0a1b0d);
          props_MAIN = cpb.create();
        }
        return props_MAIN;
    }
    return null;
  }
}
